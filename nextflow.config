/*
	Nextflow Configuration Options

	These should not need to be changed

	docker.enabled: Use a container
	docker.runOptions: Run with current UID/GID
	process.container: Which container to use
	process.cache: 'deep' - "Enable caching. Cache keys are created indexing input files content."
*/
docker.enabled = true
docker.runOptions = "-u \$(id -u):\$(id -g)"
process.container = 'appf/plantcv'
process.cache = 'deep'

/*
	LemnaTec Image server/directory details.

	image_access_method: Choose either local or sftp. Local images are symlinked, sftp images are copied locally.
	image_base_dir: Root directory for LemnaTec databases (as per hardWareIni.xml)
	image_server: image server IP/hostname (if access method is sftp)
	image_user: image server username (if access method is sftp)
	image_p_key: image server private key (if access method is sftp)
*/
params.image_access_method ='sftp'
params.image_base_dir = '/plantdb/ftp-2019/'
params.image_server = '146.118.66.62'
params.image_user = 'ubuntu'
params.image_pkey = '/Users/a1132077/.ssh/id_rsa'

// Map local image directory as a docker volume - this ensures the images are readable.
if(params.image_access_method == 'local')
	docker.runOptions = docker.runOptions + " -v $params.image_base_dir:$params.image_base_dir"

/*
	LemnaTec Database Server details

	db_srv: database server IP/hostname
	db: name of LemnaTec database containing snapshots
	db_usr: database username
	db_pw: password for db_usr
*/
params.db_srv = '146.118.66.62'
params.db = '0000_Production_N'
params.db_usr = 'readonlyuser'
params.db_pw = 'readonlyuser'

/*
	LemnaTec query info

	query_file: path to query file.
	measurement_label: selected measurement_label for LemnaTec snapshots
	limit: limit to number of images, <0 means no limit

*/
params.query_file = 'query_snapshots.sql'
params.measurement_label = '0467 Barley'
params.limit = -1

/*
	PlantCV options.

	debug: print intermediary images.
	write_images: output final images.
*/
params.debug = 'none'
params.write_image = 'none'
